{"ast":null,"code":"var _jsxFileName = \"/Users/lakshaygoyal/Desktop/COMP SCI 639/react2-alpha-lakshaygoyal 2/src/Course.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Alert from 'react-bootstrap/Alert';\n\nclass Course extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showModal: false\n    };\n  }\n\n  checkCourse() {\n    let completedCourses = this.props.completedCourses;\n    let data = this.props.data;\n    let alert = [];\n\n    if (this.props.identifier === \"Cart\") {\n      for (let i = 0; i < completedCourses.length; i++) {\n        if (data.number === completedCourses[i]) {\n          alert.push(React.createElement(Alert, {\n            variant: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, \"Course Previously taken\"));\n          return alert;\n        }\n      }\n\n      for (let i = 0; i < data.requisites.length; i++) {\n        for (let j = 0; j < data.requisites[i].length; j++) {\n          if (completedCourses.indexOf(data.requisites[i][j]) === -1) {\n            alert.push(React.createElement(Alert, {\n              variant: \"warning\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32\n              },\n              __self: this\n            }, \"Caution:Pre-requisites not met.\"));\n            return alert;\n          }\n        }\n      }\n    }\n\n    return alert;\n  }\n\n  render() {\n    return React.createElement(Card, {\n      style: {\n        width: '33%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.checkCourse(), React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        maxWidth: 250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.data.name), this.getExpansionButton()), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.data.number, \" - \", this.getCredits()), this.getDescription(), React.createElement(Button, {\n      variant: \"outline-info\",\n      onClick: () => this.openModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"View sections\")), React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: () => this.closeModal(),\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.data.name)), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.getSections()), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.getCourseButton(), React.createElement(Button, {\n      variant: \"outline-warning\",\n      onClick: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n  getCourseButton() {\n    let buttonVariant = 'outline-success';\n\n    let buttonOnClick = () => this.addCourse();\n\n    let buttonText = 'Add Course';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      buttonVariant = 'outline-danger';\n\n      buttonOnClick = () => this.removeCourse();\n\n      buttonText = 'Remove Course';\n    }\n\n    return React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, buttonText);\n  }\n\n  getSections() {\n    let sections = [];\n\n    for (let i = 0; i < this.props.data.sections.length; i++) {\n      sections.push(React.createElement(Card, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        variant: \"link\",\n        eventKey: i,\n        style: {\n          height: 63,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Section \" + i, this.getSectionButton(i)), React.createElement(Accordion.Collapse, {\n        eventKey: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, JSON.stringify(this.props.data.sections[i].time), this.getSubsections(i, this.props.data.sections[i])))));\n    }\n\n    return React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, sections);\n  }\n\n  getSectionButton(section) {\n    let buttonVariant = 'outline-success';\n\n    let buttonOnClick = e => this.addSection(e, section);\n\n    let buttonText = 'Add Section';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      if (section in this.props.cartCourses[this.props.courseKey]) {\n        buttonVariant = 'outline-danger';\n\n        buttonOnClick = e => this.removeSection(e, section);\n\n        buttonText = 'Remove Section';\n      }\n    }\n\n    return React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      style: {\n        position: 'absolute',\n        right: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, buttonText);\n  }\n\n  addCourse() {\n    this.props.addCartCourse({\n      course: this.props.courseKey\n    });\n  }\n\n  removeCourse() {\n    this.props.removeCartCourse({\n      course: this.props.courseKey\n    });\n  }\n\n  addSection(e, section) {\n    e.stopPropagation();\n    alert(\"Course Section added\");\n    this.props.addCartCourse({\n      course: this.props.courseKey,\n      section: section\n    });\n  }\n\n  removeSection(e, section) {\n    e.stopPropagation();\n    alert(\"Course Section removed\");\n    this.props.removeCartCourse({\n      course: this.props.courseKey,\n      section: section\n    });\n  }\n\n  addSubsection(e, section, subsection) {\n    e.stopPropagation();\n    alert(\"Course Sub-Section added\");\n    this.props.addCartCourse({\n      course: this.props.courseKey,\n      section: section,\n      subsection: subsection\n    });\n  }\n\n  removeSubsection(e, section, subsection) {\n    e.stopPropagation();\n    alert(\"Course Sub-Section removed\");\n    this.props.removeCartCourse({\n      course: this.props.courseKey,\n      section: section,\n      subsection: subsection\n    });\n  }\n\n  getSubsections(sectionKey, sectionValue) {\n    let subsections = [];\n\n    for (let i = 0; i < sectionValue.subsections.length; i++) {\n      subsections.push(React.createElement(Card, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        variant: \"link\",\n        eventKey: i,\n        style: {\n          height: 63,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, i, this.getSubsectionButton(sectionKey, i)), React.createElement(Accordion.Collapse, {\n        eventKey: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, JSON.stringify(sectionValue.subsections[i].time)))));\n    }\n\n    return React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, subsections);\n  }\n\n  getSubsectionButton(section, subsection) {\n    let buttonVariant = 'outline-success';\n\n    let buttonOnClick = e => this.addSubsection(e, section, subsection);\n\n    let buttonText = 'Add Subsection';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      if (section in this.props.cartCourses[this.props.courseKey]) {\n        if (this.props.cartCourses[this.props.courseKey][section].indexOf(subsection) > -1) {\n          buttonVariant = 'outline-danger';\n\n          buttonOnClick = e => this.removeSubsection(e, section, subsection);\n\n          buttonText = 'Remove Subsection';\n        }\n      }\n    }\n\n    return React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      style: {\n        position: 'absolute',\n        right: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, buttonText);\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  setExpanded(value) {\n    this.setState({\n      expanded: value\n    });\n  }\n\n  getExpansionButton() {\n    let buttonText = '▼';\n\n    let buttonOnClick = () => this.setExpanded(true);\n\n    if (this.state.expanded) {\n      buttonText = '▲';\n\n      buttonOnClick = () => this.setExpanded(false);\n    }\n\n    return React.createElement(Button, {\n      variant: \"outline-dark\",\n      style: {\n        width: 25,\n        height: 25,\n        fontSize: 12,\n        padding: 0,\n        position: 'absolute',\n        right: 20,\n        top: 20\n      },\n      onClick: buttonOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, buttonText);\n  }\n\n  getDescription() {\n    if (this.state.expanded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, this.props.data.description);\n    }\n  }\n\n  getCredits() {\n    if (this.props.data.credits === 1) return '1 credit';else return this.props.data.credits + ' credits';\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["/Users/lakshaygoyal/Desktop/COMP SCI 639/react2-alpha-lakshaygoyal 2/src/Course.js"],"names":["React","Card","Button","Modal","Accordion","Alert","Course","Component","constructor","props","state","expanded","showModal","checkCourse","completedCourses","data","alert","identifier","i","length","number","push","requisites","j","indexOf","render","width","marginTop","marginBottom","maxWidth","name","getExpansionButton","getCredits","getDescription","openModal","closeModal","getSections","getCourseButton","buttonVariant","buttonOnClick","addCourse","buttonText","courseKey","cartCourses","removeCourse","sections","Header","height","display","alignItems","getSectionButton","JSON","stringify","time","getSubsections","section","e","addSection","removeSection","position","right","addCartCourse","course","removeCartCourse","stopPropagation","addSubsection","subsection","removeSubsection","sectionKey","sectionValue","subsections","getSubsectionButton","setState","setExpanded","value","fontSize","padding","top","description","credits"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,WAAW,GAAE;AACX,QAAIC,gBAAgB,GAAE,KAAKL,KAAL,CAAWK,gBAAjC;AACA,QAAIC,IAAI,GAAE,KAAKN,KAAL,CAAWM,IAArB;AACA,QAAIC,KAAK,GAAC,EAAV;;AACA,QAAG,KAAKP,KAAL,CAAWQ,UAAX,KAA0B,MAA7B,EAAoC;AAClC,WAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACJ,gBAAgB,CAACK,MAAjC,EAAyCD,CAAC,EAA1C,EAA6C;AAC3C,YAAGH,IAAI,CAACK,MAAL,KAAgBN,gBAAgB,CAACI,CAAD,CAAnC,EAAuC;AACrCF,UAAAA,KAAK,CAACK,IAAN,CAAW,oBAAC,KAAD;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAX;AACA,iBAAOL,KAAP;AACD;AACF;;AACD,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,IAAI,CAACO,UAAL,CAAgBH,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AACzC,aAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAER,IAAI,CAACO,UAAL,CAAgBJ,CAAhB,EAAmBC,MAApC,EAA4CI,CAAC,EAA7C,EAAgD;AAC9C,cAAGT,gBAAgB,CAACU,OAAjB,CAAyBT,IAAI,CAACO,UAAL,CAAgBJ,CAAhB,EAAmBK,CAAnB,CAAzB,MAAmD,CAAC,CAAvD,EAAyD;AACvDP,YAAAA,KAAK,CAACK,IAAN,CAAW,oBAAC,KAAD;AAAO,cAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAX;AACA,mBAAOL,KAAP;AACD;AACF;AACF;AACF;;AACD,WAAOA,KAAP;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,SAAS,EAAE,KAA1B;AAAiCC,QAAAA,YAAY,EAAE;AAA/C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,WAAL,EADH,EAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAACgB,QAAAA,QAAQ,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKpB,KAAL,CAAWM,IAAX,CAAgBe,IADnB,CADF,EAIG,KAAKC,kBAAL,EAJH,CAFF,EAQE,oBAAC,IAAD,CAAM,QAAN;AAAe,MAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,KAAKtB,KAAL,CAAWM,IAAX,CAAgBK,MAA5D,SAAuE,KAAKY,UAAL,EAAvE,CARF,EASG,KAAKC,cAAL,EATH,EAUE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,cAAhB;AAA+B,MAAA,OAAO,EAAE,MAAM,KAAKC,SAAL,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVF,CADF,EAaE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWE,SAAxB;AAAmC,MAAA,MAAM,EAAE,MAAM,KAAKuB,UAAL,EAAjD;AAAoE,MAAA,QAAQ,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAK1B,KAAL,CAAWM,IAAX,CAAgBe,IAA9B,CADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKM,WAAL,EADH,CAJF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,eAAL,EADH,EAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,iBAAhB;AAAkC,MAAA,OAAO,EAAE,MAAM,KAAKF,UAAL,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAPF,CAbF,CADF;AA8BD;;AAEDE,EAAAA,eAAe,GAAG;AAChB,QAAIC,aAAa,GAAG,iBAApB;;AACA,QAAIC,aAAa,GAAG,MAAM,KAAKC,SAAL,EAA1B;;AACA,QAAIC,UAAU,GAAG,YAAjB;;AAEA,QAAG,KAAKhC,KAAL,CAAWiC,SAAX,IAAwB,KAAKjC,KAAL,CAAWkC,WAAtC,EAAmD;AACjDL,MAAAA,aAAa,GAAG,gBAAhB;;AACAC,MAAAA,aAAa,GAAG,MAAM,KAAKK,YAAL,EAAtB;;AACAH,MAAAA,UAAU,GAAG,eAAb;AACD;;AAED,WACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,aAAjB;AAAgC,MAAA,OAAO,EAAEC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,UADH,CADF;AAKD;;AAEDL,EAAAA,WAAW,GAAG;AACZ,QAAIS,QAAQ,GAAG,EAAf;;AAGA,SAAK,IAAI3B,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAG,KAAKT,KAAL,CAAWM,IAAX,CAAgB8B,QAAhB,CAAyB1B,MAA5C,EAAoDD,CAAC,EAArD,EAAwD;AACtD2B,MAAAA,QAAQ,CAACxB,IAAT,CACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEH,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,EAAE,EAAEjB,IAAI,CAAC6C,MAA3B;AAAmC,QAAA,OAAO,EAAC,MAA3C;AAAkD,QAAA,QAAQ,EAAE5B,CAA5D;AAA+D,QAAA,KAAK,EAAE;AAAC6B,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,OAAO,EAAE,MAAtB;AAA8BC,UAAAA,UAAU,EAAE;AAA1C,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,aAAa/B,CADhB,EAEG,KAAKgC,gBAAL,CAAsBhC,CAAtB,CAFH,CADF,EAKE,oBAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,QAAQ,EAAEA,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGiC,IAAI,CAACC,SAAL,CAAe,KAAK3C,KAAL,CAAWM,IAAX,CAAgB8B,QAAhB,CAAyB3B,CAAzB,EAA4BmC,IAA3C,CADH,EAEG,KAAKC,cAAL,CAAoBpC,CAApB,EAAuB,KAAKT,KAAL,CAAWM,IAAX,CAAgB8B,QAAhB,CAAyB3B,CAAzB,CAAvB,CAFH,CADF,CALF,CADJ;AAcD;;AAED,WACE,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG2B,QADH,CADF;AAKD;;AAEDK,EAAAA,gBAAgB,CAACK,OAAD,EAAU;AACxB,QAAIjB,aAAa,GAAG,iBAApB;;AACA,QAAIC,aAAa,GAAIiB,CAAD,IAAO,KAAKC,UAAL,CAAgBD,CAAhB,EAAmBD,OAAnB,CAA3B;;AACA,QAAId,UAAU,GAAG,aAAjB;;AAEA,QAAG,KAAKhC,KAAL,CAAWiC,SAAX,IAAwB,KAAKjC,KAAL,CAAWkC,WAAtC,EAAmD;AACjD,UAAGY,OAAO,IAAI,KAAK9C,KAAL,CAAWkC,WAAX,CAAuB,KAAKlC,KAAL,CAAWiC,SAAlC,CAAd,EAA4D;AAC1DJ,QAAAA,aAAa,GAAG,gBAAhB;;AACAC,QAAAA,aAAa,GAAIiB,CAAD,IAAO,KAAKE,aAAL,CAAmBF,CAAnB,EAAsBD,OAAtB,CAAvB;;AACAd,QAAAA,UAAU,GAAG,gBAAb;AACD;AACF;;AAED,WAAO,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,aAAjB;AAAgC,MAAA,OAAO,EAAEC,aAAzC;AAAwD,MAAA,KAAK,EAAE;AAACoB,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmGnB,UAAnG,CAAP;AACD;;AAEDD,EAAAA,SAAS,GAAG;AACV,SAAK/B,KAAL,CAAWoD,aAAX,CACE;AACEC,MAAAA,MAAM,EAAE,KAAKrD,KAAL,CAAWiC;AADrB,KADF;AAKD;;AAEDE,EAAAA,YAAY,GAAG;AACb,SAAKnC,KAAL,CAAWsD,gBAAX,CACE;AACED,MAAAA,MAAM,EAAE,KAAKrD,KAAL,CAAWiC;AADrB,KADF;AAKD;;AAEDe,EAAAA,UAAU,CAACD,CAAD,EAAID,OAAJ,EAAa;AACrBC,IAAAA,CAAC,CAACQ,eAAF;AACAhD,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACA,SAAKP,KAAL,CAAWoD,aAAX,CACE;AACEC,MAAAA,MAAM,EAAE,KAAKrD,KAAL,CAAWiC,SADrB;AAEEa,MAAAA,OAAO,EAAEA;AAFX,KADF;AAMD;;AAEDG,EAAAA,aAAa,CAACF,CAAD,EAAID,OAAJ,EAAa;AACxBC,IAAAA,CAAC,CAACQ,eAAF;AACAhD,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACA,SAAKP,KAAL,CAAWsD,gBAAX,CACE;AACED,MAAAA,MAAM,EAAE,KAAKrD,KAAL,CAAWiC,SADrB;AAEEa,MAAAA,OAAO,EAAEA;AAFX,KADF;AAMD;;AAEDU,EAAAA,aAAa,CAACT,CAAD,EAAID,OAAJ,EAAaW,UAAb,EAAyB;AACpCV,IAAAA,CAAC,CAACQ,eAAF;AACAhD,IAAAA,KAAK,CAAC,0BAAD,CAAL;AACA,SAAKP,KAAL,CAAWoD,aAAX,CACE;AACEC,MAAAA,MAAM,EAAE,KAAKrD,KAAL,CAAWiC,SADrB;AAEEa,MAAAA,OAAO,EAAEA,OAFX;AAGEW,MAAAA,UAAU,EAAEA;AAHd,KADF;AAOD;;AAEDC,EAAAA,gBAAgB,CAACX,CAAD,EAAID,OAAJ,EAAaW,UAAb,EAAyB;AACvCV,IAAAA,CAAC,CAACQ,eAAF;AACAhD,IAAAA,KAAK,CAAC,4BAAD,CAAL;AACA,SAAKP,KAAL,CAAWsD,gBAAX,CACE;AACED,MAAAA,MAAM,EAAE,KAAKrD,KAAL,CAAWiC,SADrB;AAEEa,MAAAA,OAAO,EAAEA,OAFX;AAGEW,MAAAA,UAAU,EAAEA;AAHd,KADF;AAQD;;AAEDZ,EAAAA,cAAc,CAACc,UAAD,EAAaC,YAAb,EAA2B;AACvC,QAAIC,WAAW,GAAG,EAAlB;;AAEA,SAAK,IAAIpD,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGmD,YAAY,CAACC,WAAb,CAAyBnD,MAA5C,EAAoDD,CAAC,EAArD,EAAwD;AACxDoD,MAAAA,WAAW,CAACjD,IAAZ,CACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEH,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,EAAE,EAAEjB,IAAI,CAAC6C,MAA3B;AAAmC,QAAA,OAAO,EAAC,MAA3C;AAAkD,QAAA,QAAQ,EAAE5B,CAA5D;AAA+D,QAAA,KAAK,EAAE;AAAC6B,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,OAAO,EAAE,MAAtB;AAA8BC,UAAAA,UAAU,EAAE;AAA1C,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG/B,CADH,EAEG,KAAKqD,mBAAL,CAAyBH,UAAzB,EAAqClD,CAArC,CAFH,CADF,EAKE,oBAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,QAAQ,EAAEA,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGiC,IAAI,CAACC,SAAL,CAAeiB,YAAY,CAACC,WAAb,CAAyBpD,CAAzB,EAA4BmC,IAA3C,CADH,CADF,CALF,CADJ;AAaC;;AAED,WACE,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiB,WADH,CADF;AAKD;;AAEDC,EAAAA,mBAAmB,CAAChB,OAAD,EAAUW,UAAV,EAAsB;AACvC,QAAI5B,aAAa,GAAG,iBAApB;;AACA,QAAIC,aAAa,GAAIiB,CAAD,IAAO,KAAKS,aAAL,CAAmBT,CAAnB,EAAsBD,OAAtB,EAA+BW,UAA/B,CAA3B;;AACA,QAAIzB,UAAU,GAAG,gBAAjB;;AAEA,QAAG,KAAKhC,KAAL,CAAWiC,SAAX,IAAwB,KAAKjC,KAAL,CAAWkC,WAAtC,EAAmD;AACjD,UAAGY,OAAO,IAAI,KAAK9C,KAAL,CAAWkC,WAAX,CAAuB,KAAKlC,KAAL,CAAWiC,SAAlC,CAAd,EAA4D;AAC1D,YAAG,KAAKjC,KAAL,CAAWkC,WAAX,CAAuB,KAAKlC,KAAL,CAAWiC,SAAlC,EAA6Ca,OAA7C,EAAsD/B,OAAtD,CAA8D0C,UAA9D,IAA4E,CAAC,CAAhF,EAAmF;AACjF5B,UAAAA,aAAa,GAAG,gBAAhB;;AACAC,UAAAA,aAAa,GAAIiB,CAAD,IAAO,KAAKW,gBAAL,CAAsBX,CAAtB,EAAyBD,OAAzB,EAAkCW,UAAlC,CAAvB;;AACAzB,UAAAA,UAAU,GAAG,mBAAb;AACD;AACF;AACF;;AAED,WAAO,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,aAAjB;AAAgC,MAAA,OAAO,EAAEC,aAAzC;AAAwD,MAAA,KAAK,EAAE;AAACoB,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmGnB,UAAnG,CAAP;AACD;;AAEDP,EAAAA,SAAS,GAAG;AACV,SAAKsC,QAAL,CAAc;AAAC5D,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACD;;AAEDuB,EAAAA,UAAU,GAAG;AACX,SAAKqC,QAAL,CAAc;AAAC5D,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACD;;AAED6D,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,SAAKF,QAAL,CAAc;AAAC7D,MAAAA,QAAQ,EAAE+D;AAAX,KAAd;AACD;;AAED3C,EAAAA,kBAAkB,GAAG;AACnB,QAAIU,UAAU,GAAG,GAAjB;;AACA,QAAIF,aAAa,GAAG,MAAM,KAAKkC,WAAL,CAAiB,IAAjB,CAA1B;;AAEA,QAAG,KAAK/D,KAAL,CAAWC,QAAd,EAAwB;AACtB8B,MAAAA,UAAU,GAAG,GAAb;;AACAF,MAAAA,aAAa,GAAG,MAAM,KAAKkC,WAAL,CAAiB,KAAjB,CAAtB;AACD;;AAED,WACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,cAAhB;AAA+B,MAAA,KAAK,EAAE;AAAC/C,QAAAA,KAAK,EAAE,EAAR;AAAYqB,QAAAA,MAAM,EAAE,EAApB;AAAwB4B,QAAAA,QAAQ,EAAE,EAAlC;AAAsCC,QAAAA,OAAO,EAAE,CAA/C;AAAkDjB,QAAAA,QAAQ,EAAE,UAA5D;AAAwEC,QAAAA,KAAK,EAAE,EAA/E;AAAmFiB,QAAAA,GAAG,EAAE;AAAxF,OAAtC;AAAmI,MAAA,OAAO,EAAEtC,aAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4JE,UAA5J,CADF;AAGD;;AAEDR,EAAAA,cAAc,GAAG;AACf,QAAG,KAAKvB,KAAL,CAAWC,QAAd,EAAwB;AACtB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWM,IAAX,CAAgB+D,WADnB,CADF;AAKD;AACF;;AAED9C,EAAAA,UAAU,GAAG;AACX,QAAG,KAAKvB,KAAL,CAAWM,IAAX,CAAgBgE,OAAhB,KAA4B,CAA/B,EACE,OAAO,UAAP,CADF,KAGE,OAAO,KAAKtE,KAAL,CAAWM,IAAX,CAAgBgE,OAAhB,GAA0B,UAAjC;AACH;;AAnRkC;;AAoRpC,eAAezE,MAAf","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n      showModal: false\r\n    }\r\n  }\r\n\r\n  checkCourse(){\r\n    let completedCourses= this.props.completedCourses;\r\n    let data= this.props.data;\r\n    let alert=[];\r\n    if(this.props.identifier === \"Cart\"){\r\n      for(let i =0; i<completedCourses.length; i++){\r\n        if(data.number === completedCourses[i]){\r\n          alert.push(<Alert variant=\"warning\">Course Previously taken</Alert>);\r\n          return alert;\r\n        }\r\n      }\r\n      for(let i=0; i<data.requisites.length; i++){\r\n        for( let j=0; j< data.requisites[i].length; j++){\r\n          if(completedCourses.indexOf(data.requisites[i][j]) ===-1){\r\n            alert.push(<Alert variant=\"warning\">Caution:Pre-requisites not met.</Alert>);\r\n            return alert;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return alert;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card style={{width: '33%', marginTop: '5px', marginBottom: '5px'}}>\r\n        <Card.Body>\r\n          {this.checkCourse()}\r\n          <Card.Title>\r\n            <div style={{maxWidth: 250}}>\r\n              {this.props.data.name}\r\n            </div>\r\n            {this.getExpansionButton()}\r\n          </Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">{this.props.data.number} - {this.getCredits()}</Card.Subtitle>\r\n          {this.getDescription()}\r\n          <Button variant='outline-info' onClick={() => this.openModal()}>View sections</Button>\r\n        </Card.Body>\r\n        <Modal show={this.state.showModal} onHide={() => this.closeModal()} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.props.data.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.getSections()}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {this.getCourseButton()}\r\n            <Button variant=\"outline-warning\" onClick={() => this.closeModal()}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  getCourseButton() {\r\n    let buttonVariant = 'outline-success';\r\n    let buttonOnClick = () => this.addCourse();\r\n    let buttonText = 'Add Course';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      buttonVariant = 'outline-danger';\r\n      buttonOnClick = () => this.removeCourse();\r\n      buttonText = 'Remove Course'\r\n    }\r\n\r\n    return (\r\n      <Button variant={buttonVariant} onClick={buttonOnClick}>\r\n        {buttonText}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  getSections() {\r\n    let sections = [];\r\n\r\n\r\n    for (let i =0; i < this.props.data.sections.length; i++){\r\n      sections.push (\r\n          <Card key={i}>\r\n            <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={i} style={{height: 63, display: 'flex', alignItems: 'center'}}>\r\n              {\"Section \" + i}\r\n              {this.getSectionButton(i)}\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={i}>\r\n              <Card.Body>\r\n                {JSON.stringify(this.props.data.sections[i].time)}\r\n                {this.getSubsections(i, this.props.data.sections[i])}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {sections}\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getSectionButton(section) {\r\n    let buttonVariant = 'outline-success';\r\n    let buttonOnClick = (e) => this.addSection(e, section);\r\n    let buttonText = 'Add Section';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      if(section in this.props.cartCourses[this.props.courseKey]) {\r\n        buttonVariant = 'outline-danger';\r\n        buttonOnClick = (e) => this.removeSection(e, section);\r\n        buttonText = 'Remove Section';\r\n      }\r\n    }\r\n\r\n    return <Button variant={buttonVariant} onClick={buttonOnClick} style={{position: 'absolute', right: 20}}>{buttonText}</Button>\r\n  }\r\n\r\n  addCourse() {\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey\r\n      }\r\n    );\r\n  }\r\n\r\n  removeCourse() {\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey\r\n      }\r\n    );\r\n  }\r\n\r\n  addSection(e, section) {\r\n    e.stopPropagation();\r\n    alert(\"Course Section added\");\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section\r\n      }\r\n    );\r\n  }\r\n\r\n  removeSection(e, section) {\r\n    e.stopPropagation();\r\n    alert(\"Course Section removed\");\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section\r\n      }\r\n    );\r\n  }\r\n\r\n  addSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    alert(\"Course Sub-Section added\");\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section,\r\n        subsection: subsection\r\n      }\r\n    );\r\n  }\r\n\r\n  removeSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    alert(\"Course Sub-Section removed\");\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section,\r\n        subsection: subsection\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  getSubsections(sectionKey, sectionValue) {\r\n    let subsections = [];\r\n\r\n    for (let i =0; i < sectionValue.subsections.length; i++){  \r\n    subsections.push (\r\n        <Card key={i}>\r\n          <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={i} style={{height: 63, display: 'flex', alignItems: 'center'}}>\r\n            {i}\r\n            {this.getSubsectionButton(sectionKey, i)}\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey={i}>\r\n            <Card.Body>\r\n              {JSON.stringify(sectionValue.subsections[i].time)}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {subsections}\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getSubsectionButton(section, subsection) {\r\n    let buttonVariant = 'outline-success';\r\n    let buttonOnClick = (e) => this.addSubsection(e, section, subsection);\r\n    let buttonText = 'Add Subsection';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      if(section in this.props.cartCourses[this.props.courseKey]) {\r\n        if(this.props.cartCourses[this.props.courseKey][section].indexOf(subsection) > -1) {\r\n          buttonVariant = 'outline-danger';\r\n          buttonOnClick = (e) => this.removeSubsection(e, section, subsection);\r\n          buttonText = 'Remove Subsection';\r\n        }\r\n      }\r\n    }\r\n\r\n    return <Button variant={buttonVariant} onClick={buttonOnClick} style={{position: 'absolute', right: 20}}>{buttonText}</Button>\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({showModal: true});\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({showModal: false});\r\n  }\r\n\r\n  setExpanded(value) {\r\n    this.setState({expanded: value});\r\n  }\r\n\r\n  getExpansionButton() {\r\n    let buttonText = '▼';\r\n    let buttonOnClick = () => this.setExpanded(true);\r\n\r\n    if(this.state.expanded) {\r\n      buttonText = '▲';\r\n      buttonOnClick = () => this.setExpanded(false)\r\n    }\r\n\r\n    return (\r\n      <Button variant='outline-dark' style={{width: 25, height: 25, fontSize: 12, padding: 0, position: 'absolute', right: 20, top: 20}} onClick={buttonOnClick}>{buttonText}</Button>\r\n    )\r\n  }\r\n\r\n  getDescription() {\r\n    if(this.state.expanded) {\r\n      return (\r\n        <div>\r\n          {this.props.data.description}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  getCredits() {\r\n    if(this.props.data.credits === 1)\r\n      return '1 credit';\r\n    else\r\n      return this.props.data.credits + ' credits';\r\n  }\r\n}export default Course;\r\n"]},"metadata":{},"sourceType":"module"}