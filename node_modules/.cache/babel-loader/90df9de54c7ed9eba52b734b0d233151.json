{"ast":null,"code":"var _jsxFileName = \"/Users/lakshaygoyal/Desktop/react2-alpha-lakshaygoyal 2/src/Recommender.js\";\nimport React from 'react';\nimport './App.css';\nimport RecommendedCourse from './RecommendedCourse';\n\nclass Recommender extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recommendedCourses: [] // this.rating = React.createRef();\n\n    };\n  }\n\n  getInterests(data) {\n    let interests = [];\n    data.keywords.forEach(keyword => {\n      if (interests.indexOf(keyword) === -1) {\n        interests.push(keyword);\n      }\n    });\n\n    if (interests.indexOf(data.subject) === -1) {\n      interests.push(data.subject);\n    }\n\n    return interests;\n  }\n\n  courseInCompletedCourses(data) {\n    let completedCourses = this.props.completedCourses;\n\n    for (let i = 0; i < completedCourses.length; i++) {\n      if (completedCourses[i].name === data.name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  courseInRecommended(course, recommended) {\n    for (let i = 0; i < recommended.length; i++) {\n      if (recommended[i].name === course.name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  showCourses(courses) {\n    let temp = [];\n    courses.forEach(course => {\n      temp.push(React.createElement(RecommendedCourse, {\n        data: course,\n        interest: course.interest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    });\n    return temp;\n  }\n\n  Recommended() {\n    let allCourses = this.props.allCourses;\n    let ratedCourses = this.props.ratedCourses;\n    let completedCourses = this.props.completedCourses;\n    let tempRecommended = []; //filter for No Rating  1 ,2\n\n    console.log(allCourses);\n    console.log(ratedCourses);\n    ratedCourses = ratedCourses.filter(course => {\n      if (course.rating !== \"No Rating\" && course.rating > 2) {\n        return true;\n      } else {\n        return false;\n      }\n    }); //sort in descending order by rating\n\n    ratedCourses = ratedCourses.sort((x, y) => y.rating - x.rating);\n\n    for (let i = 0; i < ratedCourses.length; i++) {\n      //find interest areas\n      let interests = [];\n      interests = this.getInterests(ratedCourses[i]); //find courses with same interest areas\n\n      interests.forEach(interest => {\n        allCourses.forEach(course => {\n          //find interests of selected courses\n          let courseInterests = [];\n          courseInterests = this.getInterests(course); // if Rated course interest matches course interest\n\n          if (courseInterests.indexOf(interest) === -1) {\n            console.log(\"1\");\n          } else {\n            //check if course is in CompletedCourses\n            if (!this.courseInCompletedCourses(course) && !this.courseInRecommended(course, tempRecommended)) {\n              //check if course is already there in recommended\n              course.interest = interest;\n              tempRecommended.push(course);\n            }\n          }\n        });\n      });\n    }\n\n    console.log(tempRecommended);\n    let temp = this.showCourses(tempRecommended);\n    return temp;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.Recommended());\n  }\n\n}\n\nexport default Recommender;","map":{"version":3,"sources":["/Users/lakshaygoyal/Desktop/react2-alpha-lakshaygoyal 2/src/Recommender.js"],"names":["React","RecommendedCourse","Recommender","Component","constructor","props","state","recommendedCourses","getInterests","data","interests","keywords","forEach","keyword","indexOf","push","subject","courseInCompletedCourses","completedCourses","i","length","name","courseInRecommended","course","recommended","showCourses","courses","temp","interest","Recommended","allCourses","ratedCourses","tempRecommended","console","log","filter","rating","sort","x","y","courseInterests","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport RecommendedCourse from './RecommendedCourse'\nclass Recommender extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recommendedCourses:[],\n    }\n    // this.rating = React.createRef();\n  }\n  getInterests(data) {\n    let interests = [];\n\n\n      data.keywords.forEach((keyword) => {\n        if(interests.indexOf(keyword) === -1){\n          interests.push(keyword)\n        }\n      });\n\n      if(interests.indexOf(data.subject) === -1){\n        interests.push(data.subject);\n      }\n\n\n    return interests;\n  }\ncourseInCompletedCourses(data){\n  let completedCourses = this.props.completedCourses\n  for(let i =0;i<completedCourses.length;i++){\n    if(completedCourses[i].name === data.name){\n      return true\n    }\n  }\n  return false\n}\ncourseInRecommended(course,recommended){\n  for(let i =0;i<recommended.length;i++){\n    if(recommended[i].name === course.name){\n      return true\n    }\n  }\n  return false\n}\nshowCourses(courses){\n  let temp = []\n  courses.forEach((course) => {\n    temp.push(<RecommendedCourse data={course} interest={course.interest}/>)\n  });\n  return temp\n}\nRecommended(){\n  let allCourses = this.props.allCourses\n  let ratedCourses = this.props.ratedCourses\n  let completedCourses = this.props.completedCourses\n  let tempRecommended = []\n  //filter for No Rating  1 ,2\n  console.log(allCourses);\n  console.log(ratedCourses);\n\n  ratedCourses = ratedCourses.filter((course) =>{\n    if(course.rating !== \"No Rating\"&& course.rating>2){\n      return true\n    }\n    else {\n      return false\n    }\n  } )\n  //sort in descending order by rating\n  ratedCourses = ratedCourses.sort((x,y)=> y.rating-x.rating)\n\n  for(let i=0;i<ratedCourses.length;i++){\n    //find interest areas\n    let interests = []\n    interests = this.getInterests(ratedCourses[i])\n\n    //find courses with same interest areas\n    interests.forEach((interest) => {\n      allCourses.forEach((course) => {\n\n        //find interests of selected courses\n        let courseInterests = []\n        courseInterests = this.getInterests(course)\n        // if Rated course interest matches course interest\n          if(courseInterests.indexOf(interest)=== -1){\n            console.log(\"1\")\n          }\n          else{\n            //check if course is in CompletedCourses\n            if(!this.courseInCompletedCourses(course)&&!this.courseInRecommended(course,tempRecommended)){\n                //check if course is already there in recommended\n                course.interest = interest\n              tempRecommended.push(course)\n\n            }\n          }\n      });\n\n    });\n\n  }\n  console.log(tempRecommended)\nlet temp =   this.showCourses(tempRecommended)\nreturn temp\n}\n\n  render() {\n    return (\n        <>\n        {this.Recommended()}\n        </>\n    )\n  }\n  }\n  export default Recommender\n"]},"metadata":{},"sourceType":"module"}