{"ast":null,"code":"var _jsxFileName = \"/Users/lakshaygoyal/Desktop/react2-alpha-lakshaygoyal 2/src/CompletedCourses.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Ratings from './Ratings';\n\nclass CompletedCourse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false\n    };\n  }\n\n  setExpanded(value) {\n    this.setState({\n      expanded: value\n    });\n  }\n\n  getExpansionButton() {\n    let buttonText = '▼';\n\n    let buttonOnClick = () => this.setExpanded(true);\n\n    if (this.state.expanded) {\n      buttonText = '▲';\n\n      buttonOnClick = () => this.setExpanded(false);\n    }\n\n    return React.createElement(Button, {\n      variant: \"outline-dark\",\n      style: {\n        width: 25,\n        height: 25,\n        fontSize: 12,\n        padding: 0,\n        position: 'absolute',\n        right: 20,\n        top: 20\n      },\n      onClick: buttonOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, buttonText);\n  }\n\n  getDescription() {\n    if (this.state.expanded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.data.description);\n    }\n  }\n\n  getCredits() {\n    if (this.props.data.credits === 1) return '1 credit';else return this.props.data.credits + ' credits';\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      style: {\n        width: '33%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        maxWidth: 250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.data.name), this.getExpansionButton()), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.data.number, \" - \", this.getCredits()), this.getDescription(), React.createElement(Ratings, {\n      data: this.props.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CompletedCourse;","map":{"version":3,"sources":["/Users/lakshaygoyal/Desktop/react2-alpha-lakshaygoyal 2/src/CompletedCourses.js"],"names":["React","Card","Button","Modal","Accordion","Ratings","CompletedCourse","Component","constructor","props","state","expanded","setExpanded","value","setState","getExpansionButton","buttonText","buttonOnClick","width","height","fontSize","padding","position","right","top","getDescription","data","description","getCredits","credits","render","marginTop","marginBottom","maxWidth","name","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Ratings from './Ratings'\n\n\nclass CompletedCourse extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          expanded: false,\n        }\n      }\n\n    setExpanded(value) {\n        this.setState({expanded: value});\n    }\n\n    getExpansionButton() {\n        let buttonText = '▼';\n        let buttonOnClick = () => this.setExpanded(true);\n    \n        if(this.state.expanded) {\n          buttonText = '▲';\n          buttonOnClick = () => this.setExpanded(false)\n        }\n    \n        return (\n          <Button variant='outline-dark' style={{width: 25, height: 25, fontSize: 12, padding: 0, position: 'absolute', right: 20, top: 20}} onClick={buttonOnClick}>{buttonText}</Button>\n        )\n    }\n\n    getDescription() {\n        if(this.state.expanded) {\n          return (\n            <div>\n              {this.props.data.description}\n            </div>\n          )\n        }\n    }\n    getCredits() {\n        if(this.props.data.credits === 1)\n          return '1 credit';\n        else\n          return this.props.data.credits + ' credits';\n      }\n\n    render(){\n        return (\n            <>\n            <Card style={{width: '33%', marginTop: '5px', marginBottom: '5px'}}>\n                <Card.Body>\n                    <Card.Title>\n                        <div style={{maxWidth: 250}}>\n                            {this.props.data.name}\n                        </div>\n                         {this.getExpansionButton()}\n                    </Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{this.props.data.number} - {this.getCredits()}</Card.Subtitle>\n                        {this.getDescription()}\n                        <Ratings data={this.props.data}/>\n                        {/* <Form.Group controlId=\"formRating\">\n                            <Form.Control as=\"select\" ref={this.interest} onChange={() => this.setCourses()}>\n                                {this.getInterestOptions()}\n                            </Form.Control>\n                        </Form.Group> */}\n                </Card.Body>\n            </Card>\n            </>\n\n        )\n        \n\n    }\n}\n\nexport default CompletedCourse;"]},"metadata":{},"sourceType":"module"}